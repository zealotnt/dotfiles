# This file has been auto-generated by i3-config-wizard(1).
# It will not be overwritten, so edit it as you like.
#
# Should you change your keyboard layout some time, delete
# this file and re-run i3-config-wizard(1).
#

# i3 config file (v4)
#
# Please see https://i3wm.org/docs/userguide.html for a complete reference!

set $mod Mod4

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
# font pango:monospace 8

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
font pango:DejaVuSansMono 8

# Before i3 v4.8, we used to recommend this one as the default:
# font -misc-fixed-medium-r-normal--13-120-75-75-C-70-iso10646-1
# The font above is very space-efficient, that is, it looks good, sharp and
# clear in small sizes. However, its unicode glyph coverage is limited, the old
# X core fonts rendering does not support right-to-left and this being a bitmap
# font, it doesnâ€™t scale on retina/hidpi displays.

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal
# bindsym $mod+Return exec i3-sensible-terminal

# function/utils
set $mouse_focus_center exec /home/zealot/dotfiles/scripts/mouse-move-position-window.rb

# Screens
set $big_screen DP-0
set $work_screen HDMI-0
set $code_screen DP-2.1
set $chat_screen DP-2.2.8
set $laptop_screen eDP-1

# i3-volume config, from: https://github.com/hastinbe/i3-volume
set $i3_volume_path /usr/local/bin/i3-volume
set $i3_volume_statuscmd i3blocks
set $i3_volume_timeout_volume_step 300
set $i3_volume_timeout_mute 500
set $i3_volume_statussig SIGRTMIN+10
set $i3_volume_step 5

set $floating_border_pixel 5

# kill focused window
bindsym $mod+Shift+q kill

# workspace_auto_back_and_forth yes
focus_follows_mouse no
for_window [class=".*"] title_format "%class | %title"
for_window [class=".*"] border pixel 1

# start dmenu (a program launcher)
# bindsym $mod+d exec dmenu_run
bindsym $mod+space exec rofi -show combi
# There also is the (new) i3-dmenu-desktop which only displays applications
# shipping a .desktop file. It is a wrapper around dmenu, so you need that
# installed.
# bindsym $mod+d exec --no-startup-id i3-dmenu-desktop

# change focus
bindsym $mod+h focus left; $mouse_focus_center
bindsym $mod+j focus down; $mouse_focus_center
bindsym $mod+k focus up; $mouse_focus_center
bindsym $mod+l focus right; $mouse_focus_center

bindsym $mod+Left focus left; $mouse_focus_center
bindsym $mod+Down focus down; $mouse_focus_center
bindsym $mod+Up focus up; $mouse_focus_center
bindsym $mod+Right focus right; $mouse_focus_center

# move focused window
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right

# move focused container to output, Mod1 is Alt key
bindsym $mod+Mod1+Ctrl+h move workspace to output left
bindsym $mod+Mod1+Ctrl+j move workspace to output down
bindsym $mod+Mod1+Ctrl+k move workspace to output up
bindsym $mod+Mod1+Ctrl+l move workspace to output right

# enter fullscreen mode for the focused container
bindsym $mod+F12 fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+Shift+s layout stacking
bindsym $mod+Shift+w layout tabbed
bindsym $mod+Shift+e layout toggle split

# toggle tiling / floating
for_window [class="Yad"] floating enable border pixel $floating_border_pixel
for_window [class="GoldenDict"] floating enable border pixel $floating_border_pixel
for_window [class="GoldenDict"] resize set 1792 960
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+Shift+t focus mode_toggle

# focus the child container
#bindsym $mod+d focus child

# TIPS_1 for finding class:
#   using xprop, click to inspectee windows
#   all properties of the application/windows will be shown -> use the class/name here
# TIPS_2 for command criteria, ref: https://i3wm.org/docs/userguide.html#command_criteria
# TIPS_3 for run-or-raise condition, read more at ref: https://crates.io/crates/run-or-raise
workspace 1 output $big_screen
assign [class="Google-chrome"] workspace 1
#bindsym Mod1+1 exec run-or-raise 'name ~ ".*Google Chrome" && class = "Google-chrome"' google-chrome

workspace 2 output $work_screen
assign [class="Alacritty"] workspace 2
assign [class="Qalculate-gtk"] workspace 2
#bindsym Mod1+2 exec run-or-raise 'class = "Alacritty"' alacritty

workspace 3 output $code_screen
assign [class="Emacs"] workspace 3
assign [class="Code"] workspace 3
#bindsym Mod1+3 exec run-or-raise 'class = "Emacs"' emacs26

workspace 4 output $chat_screen
assign [class="TelegramDesktop"] workspace 4
assign [class="Viber"] workspace 4
assign [class="Slack"] workspace 4
assign [class="Caprine"] workspace 4
bindsym $mod+Mod1+s exec run-or-raise 'class = "Slack"' slack
# bindsym $mod+Mod1+t exec run-or-raise 'class = \"TelegramDesktop\"' env QT_ACCESSIBILITY=1 QT_IM_MODULE=ibus /home/zealot/bin/Telegram/Telegram
bindsym $mod+Mod1+t exec env QT_ACCESSIBILITY=1 QT_IM_MODULE=ibus /home/zealot/bin/Telegram/Telegram
# bindsym $mod+Mod1+v exec run-or-raise 'class = "ViberPC"' env QT_ACCESSIBILITY=1 QT_IM_MODULE=ibus /opt/viber/Viber
bindsym $mod+Mod1+v exec env QT_ACCESSIBILITY=1 QT_IM_MODULE=ibus /opt/viber/Viber
bindsym $mod+Mod1+f exec run-or-raise 'class = "Caprine"' caprine
bindsym $mod+Mod1+z exec run-or-raise 'name ~ "Zalo Web" && class = "Google-chrome"' google-chrome

workspace 5 output $code_screen
assign [class="TeamViewer"] workspace 5
assign [class="zoom"] workspace 5
assign [class="libreoffice-writer"] workspace 5
assign [class="QtCreator"] workspace 5
assign [class="Meld"] workspace 5
assign [class="S3D-Software"] workspace 5
assign [class="Gpick"] workspace 5
assign [class="Xfce4-notifyd-config"] workspace 5
assign [class="Sublime_merge"] workspace 5
assign [class="Postman"] workspace 5
assign [class="DB Browser for SQLite"] workspace 5
assign [class="Eog"] workspace 5
assign [class="Gimp*"] workspace 5
assign [class="jetbrains-pycharm-ce"] workspace 5
assign [class="calibre-ebook-viewer"] workspace 5
assign [class="calibre-gui"] workspace 5
assign [class="calibre"] workspace 5
assign [class="Evince"] workspace 5
assign [class="Spotify"] workspace 5
assign [class="Nemo"] workspace 5
assign [class="obs"] workspace 5
assign [class="Opera"] workspace 5
assign [class="Synergy"] workspace 5
assign [class="GParted"] workspace 5
assign [class="Blueman-manager"] workspace 5
assign [class="Gnome-disks"] workspace 5
assign [class="Pavucontrol"] workspace 5
assign [class="Gnome-power-statistics"] workspace 5

# -> Arduino-IDE
assign [class="processing-app-Base"] workspace 5
assign [class="Free Download Manager"] workspace 5
#bindsym Mod1+5 exec run-or-raise 'class = "Spotify"' spotify
bindsym $mod+Mod1+q exec run-or-raise 'class = "Qalculate-gtk"' qalculate.gtk

workspace 6 output $work_screen
assign [class="demo_fishyy_server"] workspace 6

workspace 7 output $code_screen
assign [class="Firefox$"] workspace 7

workspace 8 output $chat_screen
assign [class="mpv"] workspace 8

workspace 10 output $chat_screen

assign [class="Firefox Developer Edition"] workspace 11
# duplicate this cause the above will overwrite normal firefox
assign [class="Firefox$"] workspace 7
assign [class="libreoffice-calc"] workspace 11
assign [class="Binance"] workspace 11
workspace 11 output $big_screen

# switch to workspace
bindsym $mod+1 workspace 1; $mouse_focus_center
bindsym $mod+2 workspace 2; $mouse_focus_center
bindsym $mod+3 workspace 3; $mouse_focus_center
bindsym $mod+4 workspace 4; $mouse_focus_center
bindsym $mod+5 workspace 5; $mouse_focus_center
bindsym $mod+6 workspace 6; $mouse_focus_center
bindsym $mod+7 workspace 7; $mouse_focus_center
bindsym $mod+8 workspace 8; $mouse_focus_center
bindsym $mod+9 workspace 9; $mouse_focus_center
bindsym $mod+0 workspace 10; $mouse_focus_center
bindsym $mod+grave workspace 11; $mouse_focus_center

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace 1
bindsym $mod+Shift+2 move container to workspace 2
bindsym $mod+Shift+3 move container to workspace 3
bindsym $mod+Shift+4 move container to workspace 4
bindsym $mod+Shift+5 move container to workspace 5
bindsym $mod+Shift+6 move container to workspace 6
bindsym $mod+Shift+7 move container to workspace 7
bindsym $mod+Shift+8 move container to workspace 8
bindsym $mod+Shift+9 move container to workspace 9
bindsym $mod+Shift+0 move container to workspace 10
bindsym $mod+Shift+grave move container to workspace 11

# reload the configuration file
# bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
# exit i3 (logs you out of your X session)
bindsym $mod+Shift+Ctrl+l exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -b 'Yes, exit i3' 'i3-msg exit'"

set $util_launcher Launch: [N]emo [D]isk [Q]alculate Pa[v]ucontrol [B]lueman
bindsym $mod+Mod1+u mode "$util_launcher"
mode "$util_launcher" {
  bindsym d exec run-or-raise 'class = "Gnome-disks"' gnome-disks; mode "default"
  bindsym n exec run-or-raise 'class = "Nemo"' /usr/bin/nemo; mode "default"
  bindsym q exec run-or-raise 'class = "Qalculate-gtk"' qalculate.gtk; mode "default"
  bindsym v exec run-or-raise 'class = "Pavucontrol"' pavucontrol; mode "default"
  bindsym b exec run-or-raise 'class = "Blueman-manager"' blueman-manager; mode "default"

  bindsym Return mode "default"
  bindsym Escape mode "default"
}

set $copyq_launcher Launch: [c]lipboard [s]nippets [i]mages
bindsym $mod+Mod1+c mode "$copyq_launcher"
mode "$copyq_launcher" {
  bindsym c exec /usr/bin/copyq show clipboard; mode "default"
  bindsym s exec /usr/bin/copyq show Snippets; mode "default"
  bindsym i exec /usr/bin/copyq show Images; mode "default"
  bindsym Return mode "default"
  bindsym Escape mode "default"
}

set $chat_app_launcher Launch: [s]lack [t]elegram [v]iber [f]acebook [z]alo
bindsym $mod+Mod1+space mode "$chat_app_launcher"
mode "$chat_app_launcher" {
  bindsym s exec run-or-raise 'class = "Slack"' slack; mode "default"
  # bindsym t exec run-or-raise 'class = "TelegramDesktop"' env QT_ACCESSIBILITY=1 QT_IM_MODULE=ibus /home/zealot/bin/Telegram/Telegram; mode "default"
  bindsym t exec env QT_ACCESSIBILITY=1 QT_IM_MODULE=ibus /home/zealot/bin/Telegram/Telegram; mode "default"
  # bindsym v exec run-or-raise 'class = "ViberPC"' env QT_ACCESSIBILITY=1 QT_IM_MODULE=ibus /opt/viber/Viber; mode "default"
  bindsym v exec env QT_ACCESSIBILITY=1 QT_IM_MODULE=ibus /opt/viber/Viber; mode "default"
  bindsym f exec run-or-raise 'class = "Caprine"' caprine; mode "default"
  bindsym z exec run-or-raise 'name ~ "Zalo Web" && class = "Google-chrome"' google-chrome; mode "default"
  bindsym Return mode "default"
  bindsym Escape mode "default"
}

bindsym $mod+r mode "window-management"
mode "window-management" {
  bindsym a focus parent; mode "default"
  bindsym v split h; mode "default"
  bindsym h split h; mode "default"
  bindsym Shift+minus split h; mode "default"
  bindsym s split v; mode "default"
  bindsym minus split v; mode "default"

  # back to normal: Enter or Escape
  bindsym Return mode "default"
  bindsym Escape mode "default"
}

# resize window (you can also use the mouse for that)
bindsym $mod+Mod1+r mode "resize"
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the windowâ€™s width.
        # Pressing right will grow the windowâ€™s width.
        # Pressing up will shrink the windowâ€™s height.
        # Pressing down will grow the windowâ€™s height.
        bindsym h resize shrink width 10 px or 10 ppt
        bindsym j resize grow height 10 px or 10 ppt
        bindsym k resize shrink height 10 px or 10 ppt
        bindsym l resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape
        bindsym Return mode "default"
        bindsym Escape mode "default"
}

exec --no-startup-id xset r rate 169 80
# exec --no-startup-id setxkbmap -option altwin:swap_alt_win
# exec --no-startup-id setxkbmap -option ctrl:nocaps
# exec --no-startup-id xcape -e 'Control_L=Escape'
exec --no-startup-id nm-applet # Network
exec --no-startup-id pasystray # Audio Volume
exec --no-startup-id blueman-tray # Bluetooth
# exec --no-startup-id compton -b --config ~/.config/compton.conf

# Audio volume controls
bindsym XF86AudioRaiseVolume exec $i3_volume_path -np -i $i3_volume_step -t $i3_volume_statuscmd -u $i3_volume_statussig -e $i3_volume_timeout_volume_step
bindsym XF86AudioLowerVolume exec $i3_volume_path -np -d $i3_volume_step -t $i3_volume_statuscmd -u $i3_volume_statussig -e $i3_volume_timeout_volume_step
bindsym XF86AudioMute        exec $i3_volume_path -mn -t $i3_volume_statuscmd -u $i3_volume_statussig -e $i3_volume_timeout_mute

bindsym XF86AudioPrev        exec /usr/bin/playerctl previous
bindsym XF86AudioNext        exec /usr/bin/playerctl next
bindsym XF86AudioPlay        exec "rofi -show Play-Pause-Media -modi window,Play-Pause-Media:/home/zealot/dotfiles/rofi/scripts/playerctl-playpause-media.rb"
bindsym XF86MonBrightnessUp    exec "brightnessctl s 10%+"
bindsym XF86MonBrightnessDown  exec "brightnessctl s 10%-"

# bindsym $mod+Mod1+o exec /usr/bin/orage
bindsym $mod+Mod1+h exec "rofi -show 'Toggle-Device' -modi Toggle-Device:/home/zealot/dotfiles/rofi/scripts/toggle-device.rb"
bindsym $mod+Ctrl+q exec i3lock --color=000000; exec xset dpms force off; exec setMouse.rb d
bindsym $mod+Mod1+o exec DISPLAY=$(w | grep zealot | grep gdm | awk '{print $3}') xset dpms force off
bindsym $mod+Shift+Ctrl+4 exec /usr/bin/flameshot gui
for_window [class="copyq"] floating enable border pixel $floating_border_pixel
for_window [class="copyq"] resize set 1280 720
bindsym Mod1+c $mouse_focus_center
# to disable Ctrl+w that accidentially close chrome tab over CKA/CKAD exam
# bindsym ctrl+w nop

# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
bar {
        output $big_screen
        status_command i3blocks -c ~/.config/i3/i3blocks.conf
        tray_output primary
        tray_padding 0
        font pango:DejaVuSansMono 10
}

bar {
        output $work_screen
        output $code_screen
        output $chat_screen
        output $laptop_screen
        tray_output primary
        status_command i3blocks -c ~/.config/i3/i3blocks.conf
        font pango:DejaVuSansMono 8
}
